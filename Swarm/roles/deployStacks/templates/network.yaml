services:

  traefik:
    image: traefik:latest
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    command:
      - "--api.dashboard=true"
      - "--api.insecure=false"
      - "--log.level=INFO"
      - "--providers.swarm=true"
      - "--providers.swarm.exposedbydefault=false"
      - "--providers.swarm.network=proxy_network"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.http.tls=true"
      # - "--certificatesresolvers.duckdns.acme.dnschallenge=true"
      # - "--certificatesresolvers.duckdns.acme.dnschallenge.provider=duckdns"
      # - "--certificatesresolvers.duckdns.acme.email={{ email }}"
      # - "--certificatesresolvers.duckdns.acme.storage=/letsencrypt/acme.json"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - "gfs_traefik:/letsencrypt"
    networks:
      - proxy_network
    # environment:
    #   - DUCKDNS_TOKEN={{ duckdns_token }}
    deploy:
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.enable=true"
        - "traefik.http.services.dummy-svc.loadbalancer.server.port=9999"
        - "traefik.http.routers.traefik.service=api@internal"

        # Redirect HTTP to HTTPS
        - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
        - "traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)"
        - "traefik.http.routers.http-catchall.entrypoints=web"
        - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"

        # Traefik Dashboard (Optional)
        - "traefik.http.routers.traefik.rule=Host(`traefik.{{ swarm.domain }}`)"
        - "traefik.http.routers.traefik.entrypoints=websecure"
        # - "traefik.http.routers.traefik.tls.certresolver={{ swarm.certresolver }}"

  whoami:
    image: "traefik/whoami"
    networks:
      - proxy_network
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.swarm.network=proxy_network" 
        - "traefik.http.services.whoami.loadbalancer.server.port=80"
        - "traefik.http.routers.whoami.rule=Host(`whoami.{{ swarm.domain }}`)"
        - "traefik.http.routers.whoami.entrypoints=web"
        - "traefik.http.routers.whoami.entrypoints=websecure"
        - "traefik.http.routers.whoami.middlewares=redirect-to-https"
        # - "traefik.http.routers.whoami.tls.certresolver={{ swarm.certresolver }}"

networks:
  proxy_network:
      external: true

volumes:
  gfs_traefik:
    driver: "{{ gluster.gluster_alias }}"
    name: "{{ gluster.volume_name }}/swarm/traefik"
